import { LRParser, LocalTokenGroup } from '@lezer/lr';
import {
  LRLanguage,
  indentNodeProp,
  foldNodeProp,
  foldInside,
  LanguageSupport,
} from '@codemirror/language';
import { styleTags, tags } from '@lezer/highlight';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec__ID = {
  __proto__: null,
  singleprecision: 316,
  doubleprecision: 318,
  quadprecision: 320,
  fixedpointprecision: 322,
  import: 326,
  declare: 336,
  xor: 342,
  mem: 352,
  prefix: 354,
  int: 356,
  float: 358,
  attach: 360,
  enable: 362,
  control: 364,
  acos: 366,
  asin: 368,
  atan: 370,
  atan2: 372,
  cos: 374,
  sin: 376,
  tan: 378,
  exp: 380,
  log: 382,
  log10: 384,
  pow: 386,
  sqrt: 388,
  abs: 390,
  min: 392,
  max: 394,
  fmod: 396,
  remainder: 398,
  floor: 400,
  ceil: 402,
  rint: 404,
  rdtable: 406,
  rwtable: 408,
  select2: 410,
  select3: 412,
  assertbounds: 414,
  lowest: 416,
  highest: 418,
  with: 422,
  letrec: 424,
  where: 426,
  case: 430,
  ffunction: 438,
  any: 448,
  fconstant: 452,
  fvariable: 456,
  component: 458,
  library: 460,
  environment: 462,
  waveform: 464,
  route: 468,
  button: 472,
  checkbox: 476,
  vslider: 480,
  hslider: 484,
  nentry: 488,
  vgroup: 492,
  hgroup: 496,
  tgroup: 500,
  vbargraph: 504,
  hbargraph: 508,
  soundfile: 512,
  par: 516,
  seq: 520,
  sum: 524,
  prod: 528,
  inputs: 532,
  outputs: 536,
};
const parser = LRParser.deserialize({
  version: 14,
  states:
    "!-^OwQPOOOOQO'#Ca'#CaOOQO'#Cb'#CbOOQO'#Cc'#CcOOQO'#Cd'#CdOOQO'#C`'#C`OOQO'#Ff'#FfO!OQPO'#FnO!jQPO'#FeO!xQPO'#FmQOQPOOOOQO-E9d-E9dOOQO'#Cf'#CfO#SQPO'#CeOOQO'#Cn'#CnO#jQPO'#CrO#wQPO'#CsO#|QPO'#CqOOQO'#Cp'#CpO$RQPO'#CmOOQO'#Cy'#CyO$ZQPO'#CxOOQO'#Ft'#FtOOQO,5<P,5<POOQO-E9c-E9cO$cQPO,59PO$yQPO'#CuOOQO,59_,59_OOQO,59],59]O#wQPO,59_OOQO'#Co'#CoO%WQPO,59XO%cQQO,59dO%cQQO,59dO+ROWO'#CiOOQO'#Ch'#ChO+aQPO1G.kOOQO1G.y1G.yOOQO1G.w1G.wO+fQPO1G.sO$cQPO1G.}O+kQQO'#CrOOQO'#D['#D[OOQO'#Dg'#DgO-dQQO'#GPO/mQQO'#GPOOQO'#Dj'#DjOOQO'#Dk'#DkOOQO'#Dl'#DlOOQO'#Dm'#DmOOQO'#Dn'#DnOOQO'#Do'#DoOOQO'#Dp'#DpOOQO'#Dq'#DqOOQO'#Dr'#DrOOQO'#Ds'#DsOOQO'#Dt'#DtOOQO'#Du'#DuOOQO'#Dv'#DvOOQO'#Dw'#DwOOQO'#Dx'#DxOOQO'#Dy'#DyOOQO'#Dz'#DzOOQO'#D{'#D{OOQO'#D|'#D|OOQO'#D}'#D}OOQO'#EO'#EOOOQO'#EP'#EPOOQO'#EQ'#EQOOQO'#ER'#EROOQO'#ES'#ESOOQO'#ET'#ETOOQO'#EU'#EUOOQO'#EV'#EVOOQO'#EW'#EWOOQO'#EX'#EXOOQO'#EY'#EYOOQO'#EZ'#EZOOQO'#E['#E[OOQO'#E]'#E]OOQO'#Er'#ErOOQO'#Eu'#EuO/wQPO'#HOOOQO'#Ex'#ExO/|QPO'#HVOOQO'#Ey'#EyO0RQPO'#HXOOQO'#Ez'#EzOOQO'#E{'#E{OOQO'#E|'#E|OOQO'#FO'#FOOOQO'#FQ'#FQOOQO'#FS'#FSO0WQPO'#HaOOQO'#FT'#FTO0]QPO'#HcOOQO'#FU'#FUO0bQPO'#HeOOQO'#FV'#FVO0gQPO'#HgOOQO'#FW'#FWO0lQPO'#HiOOQO'#FX'#FXO0qQPO'#HkOOQO'#FY'#FYO0vQPO'#HmOOQO'#FZ'#FZO0{QPO'#HoOOQO'#F['#F[O1QQPO'#HqOOQO'#F]'#F]O1VQPO'#HsOOQO'#FR'#FROOQO'#F^'#F^O1[QPO'#HuOOQO'#F_'#F_O1aQPO'#HwOOQO'#F`'#F`O1fQPO'#HyOOQO'#Fa'#FaO1kQPO'#H{OOQO'#Fb'#FbO1pQPO'#H}OOQO'#Fc'#FcO1uQPO'#IPOOQO'#Fd'#FdO1zQPO'#IROOQO'#GP'#GPO%cQQO'#GPO2PQPO'#GPO2UQPO'#GPO2ZQPO'#GPO2`QPO'#GPO2eQPO'#GPO2jQPO'#GPO4VQQO'#F{OOQO'#F|'#F|O4mQPO'#CzO5RQPO1G/OO5rQPO1G/OOOQO'#Gv'#GvO5yQQO'#GvOOOO'#Fg'#FgO6jOWO,59TOOQO,59T,59TO6xQPO7+$VOOQO7+$_7+$_O6}QPO7+$iO7SQQO'#CuOOQO,5:R,5:ROOQO,5<k,5<kO8{QPO,5=jO8{QPO,5=qO8{QPO,5=sO$cQPO,5={O$cQPO,5=}O$cQPO,5>PO$cQPO,5>RO$cQPO,5>TO$cQPO,5>VO$cQPO,5>XO$cQPO,5>ZO$cQPO,5>]O$cQPO,5>_O$cQPO,5>aO$RQPO,5>cO$RQPO,5>eO$RQPO,5>gO$RQPO,5>iO%cQQO,5>kO%cQQO,5>mO9TQPO,5<kO$RQPO,5<kO9[QPO'#EsO$cQPO,5<kO9aQPO'#E}O9hQPO'#FPO%cQQO,5<kO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hOOQO,5<h,5<hO9vQPO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO%cQQO,5<hO:dQPO,5<hO%cQQO,5<gO%cQQO,5<gO%cQQO,5<gO%cQQO,5<gO%cQQO,59fO:kQPO7+$jOOQO'#E_'#E_O:pQPO,5:xOOQO'#Ed'#EdO:uQPO,5:}O%cQQO,5;VO%cQQO,5;XO%cQQO,5;YO%cQQO,5;ZO%cQQO,5;[OOQO7+$j7+$jOOOO-E9e-E9eOOQO1G.o1G.oOOQO<<Gq<<GqOOQO<<HT<<HTOOQO'#HR'#HRO:zQPO1G3UO$RQPO'#HQO$RQPO1G3]O$RQPO1G3_O;PQPO1G3gO;UQPO1G3iO;ZQPO1G3kO;`QPO1G3mO;eQPO1G3oO;jQPO1G3qO;oQPO1G3sO;tQPO1G3uO;yQPO1G3wO<OQPO1G3yO<TQPO1G3{O<YQPO1G3}O<_QPO1G4PO<dQPO1G4RO<iQPO1G4TO<nQPO1G4VO<uQPO1G4XOOQO1G2V1G2VOOQO'#Gz'#GzO<|QPO1G2VO%cQQO'#G}OOQO'#G|'#G|O=UQPO,5;_O=^QPO1G2VO=cQPO,5;iO=hQPO'#DgOOQO'#H_'#H_O=pQPO,5;kO=xQPO1G2VO@ZQQO1G2SO@bQQO1G2SOBiQQO1G2SOBpQQO1G2SODwQQO1G2SOGOQQO1G2SOGVQQO1G2SOOQO1G2S1G2SOG^QQO1G2SOI_QQO1G2SOKlQQO1G2SOKsQQO1G2SOM_QQO1G2SO!!RQQO1G2SO!!YQQO1G2SO!$aQQO1G2SO!$hQQO1G2SO!&iQQO1G2SO!&vQQO1G2SO!'TQPO1G2SO$RQPO'#FhO!']QPO'#GOO!'gQPO1G2SO!'}QPO1G2RO!(UQPO1G2RO!(]QPO1G2ROOQO1G2R1G2RO!(qQPO1G/QO%cQQO<<HUO!)VQPO'#E`OOQO1G0d1G0dO!)^QPO'#EeOOQO1G0i1G0iO!)iQPO1G0qO!*WQPO1G0sO!*uQPO1G0tO!+uQPO1G0uOOQO1G0v1G0vO!,VQSO7+(pO!,[QPO,5=lO!,dQPO7+(wO!,iQPO7+(yOOQO7+)R7+)ROOQO7+)T7+)TO%cQQO7+)VO%cQQO7+)XO%cQQO7+)ZO%cQQO7+)]O%cQQO7+)_O%cQQO7+)aO%cQQO7+)cO%cQQO7+)eO%cQQO7+)gO%cQQO7+)iO%cQQO7+)kO%cQQO7+)mO%cQQO7+)oOOQO7+)q7+)qOOQO7+)s7+)sO$RQPO,5=fO!,nQPO7+'qO!,sQPO,5=iOOQO,5=h,5=hOOQO1G0y1G0yOOQO7+'q7+'qOOQO1G1T1G1TO9hQPO,5=yOOQO1G1V1G1VO%cQQO7+'qOOQO7+'n7+'nOOQO,5<S,5<SOOQO-E9f-E9fO!,{QPOAN=pO!-SQPO,5:zO$RQPO'#EhO!-XQPO'#EgOOQO'#Fi'#FiO!-^QPO'#EfO!-iQPO,5;PO!-qQPO<<L[O!-vQPO1G3WO$RQPO1G3WO!.UQSO<<LcO!.ZQSO<<LeO!.`QPO<<LqO!.qQPO<<LsO!/SQPO<<LuO!/eQPO<<LwO!/lQPO<<LyO!/sQPO<<L{O!/zQPO<<L}O!0]QPO<<MPO!0nQPO<<MRO!1PQPO<<MTO!1bQPO<<MVO!1sQPO<<MXO!2UQPO<<MZOOQO1G3Q1G3QO!2gQPO<<K]O!2lQQO1G3TOOQO1G3e1G3eO!2qQPO<<K]OOQOG23[G23[OOQO1G0f1G0fOOQO,5;S,5;SO%cQQO,5;ROOQO-E9g-E9gOOQO'#Ej'#EjOOQO1G0k1G0kO!)VQPO1G0kO$cQPOANAvOOQO'#Ev'#EvOOQO'#HT'#HTOOQO'#HS'#HSO!3VQPO7+(rOOQO7+(r7+(rO!3_QPO7+(rO!3gQPOANA}O!3lQPOANBPO%cQQOANB]O%cQQOANB_O%cQQOANBaOOQOANBcANBcOOQOANBeANBeOOQOANBgANBgO%cQQOANBiO%cQQOANBkOOQOANBmANBmO%cQQOANBoO%cQQOANBqO%cQQOANBsO%cQQOANBuO%cQQOAN@wO%cQQO7+(oOOQOAN@wAN@wO!3qQPO1G0mO!3xQPO7+&VO!3}QPOG27bO!-yQPO,5=nOOQO<<L^<<L^O!4SQPO<<L^O$RQPO<<L^OOQOG27iG27iOOQOG27kG27kO!4bQPOG27wO!4sQPOG27yO!5UQPOG27{O!5gQPOG28TO!5xQPOG28VO!6ZQPOG28ZO!6bQPOG28]O!6iQPOG28_O!6pQPOG28aO!6wQPOG26cO!7OQPO<<LZOOQO7+&X7+&XOOQO<<Iq<<IqOOQOLD,|LD,|OOQO1G3Y1G3YO!7VQPOANAxOOQOANAxANAxO!7_QPOANAxO%cQQOLD-cO%cQQOLD-eO%cQQOLD-gOOQOLD-oLD-oOOQOLD-qLD-qOOQOLD-uLD-uOOQOLD-wLD-wOOQOLD-yLD-yOOQOLD-{LD-{OOQOLD+}LD+}OOQOANAuANAuOOQOG27dG27dO!7dQPOG27dO!7rQPO!$(!}O!8TQPO!$(#PO!8fQPO!$(#RO!8wQPOLD-OOOQOLD-OLD-OO%cQQO!)9FiO%cQQO!)9FkO%cQQO!)9FmOOQO!$(!j!$(!jO!9PQPO!.K<TO!9bQPO!.K<VO!9sQPO!.K<XOOQO!4/1o!4/1oOOQO!4/1q!4/1qOOQO!4/1s!4/1sO!:UQPO'#CsO!:UQPO,59_O!:ZQPO'#Cq",
  stateData:
    "!:h~O$`OSPOSQOS~O$dPO$eQO$fRO$gSOh$bP$c$bP$i$bP$n$bP~O$^$aP~P]O$dPO$eQO$fRO$gSOh$bX$c$bX$i$bX$n$bX~Oh`O$c_O$i[O$n^O~O$^$aX#U$aX~P]OZiO~OZdXhfX#`dX_dX}dX~O#]dX$cdX$jdX~P#XO$cjO~OhmO~Oh`O$c_O~OZpO#]qO~O$jrO~OZjXhiX#`jX_jX}jX~O#]jX$cjX$jjX~P$hOh`O$c_O$jrO~OZ#tOh*nOs|Ot}Ou#sOv#sOw#sOx#sOy#sO|#sO}#sO!P#sO!Q#sO!R#sO!S#sO!T#sO!U#sO!V#sO!W#sO![#sO!]#sO#e#uO$cyO$qzO$t{O$u{O$v!OO$w!PO$x!QO$y!RO$z!SO${!TO$|!UO$}!VO%O!WO%P!XO%Q!YO%R!ZO%S![O%T!]O%U!^O%V!_O%W!`O%X!aO%Y!bO%Z!cO%[!dO%]!eO%^!fO%_!gO%`!hO%a!iO%b!jO%c!kO%d!lO%e!mO%f!nO%g!oO%h!pO%i!qO%o!rO%s!sO%z!uO%|!wO%}!yO&O!zO&P!{O&Q!|O&S!}O&U#OO&W#QO&Y#SO&[#UO&^#WO&`#YO&b#[O&d#^O&f#`O&h#bO&j#eO&l#gO&n#iO&p#kO&r#mO&t#oO&v#qO~O^$SO$k$SO$l$SO$m$UO~O_$VO~O`$WO~OodXpdXqdXrdXsdXtdXudXvdXwdXxdXydXzdX{dX|dX!PdX!QdX!RdX!SdX!TdX!UdX!VdX!WdX!XdX$qdX`dX%kdX%ldX~P#XO$t$ZO$u$ZOZ$sX_$sXo$sXp$sXq$sXr$sXs$sXt$sXu$sXv$sXw$sXx$sXy$sXz$sX{$sX|$sX}$sX!P$sX!Q$sX!R$sX!S$sX!T$sX!U$sX!V$sX!W$sX!X$sX#`$sX$q$sX`$sX%k$sX%l$sX~Oh*nO$cyO~P-dOZ$]O~OZ$^O~OZ$_O~OZ$`O~OZ$aO~OZ$bO~OZ$cO~OZ$dO~OZ$eO~OZ$fO~OZ$gO~OZ$hO~OZ$iO~OZ$jO~OZ$kO~OZ$lO~OZ$mO~OZ$nO~OZ$oO~OZ$pO~OZ$rO~O#T$sO~OZ$tO~O#T$uO~O#T$vO~OZ$wO~OZ%^Os$xOt$yOu$zOv${Ow$|Ox$}Oy%OOz%PO{%QO|%RO}%SO!P%UO!Q%VO!R%WO!S%XO!T%YO!U%ZO!V%[O!W%]O!X%_O$qzO~O_$oXo$oXp$oXq$oXr$oX#`$oX~P2oOo%`Op%aOq%bOr%cO_nX#`nX~O_%eO#`%dO~Oo%kOp%lOq%mOr%nO#`%jO%k%fO%l%hO~O`%oO~P5ZO`%jXo%jXp%jXq%jXr%jX#`%jX%k%jX%l%jX_%jX~P2oO^$SO$k$SO$l$SO$m%qO~O`%rO~O`%sO~OojXpjXqjXrjXsjXtjXujXvjXwjXxjXyjXzjX{jX|jX!PjX!QjX!RjX!SjX!TjX!UjX!VjX!WjX!XjX$qjX`jX%kjX%ljX~P$hO$x!QO$y!RO~O_&[O~P5ZOZ&_O~O#U$aP~P]Os&dOt&dO$t{O$u{O~Oh*nO$cyO~O$dPO$eQO$fRO$gSOh$bP$c$bP~O!Y$rP~P:OO#]'UO~O#T'VO~O#T'XO~O#`'`O~O_'dO~O_'eO~O#`'fO~O#`'gO~O#`'hO~O#`'iO~O#`'jO~O#`'kO~O#`'lO~O#`'mO~O#`'nO~O#`'oO~O#`'pO~O#`'qO~O#`'rO~O_'sO~P5ZO_'tO~P5ZO_'vO#`'uO~OZ&_O#U'yO~O_'zO~O#U'{O~O$t$ZO$u$ZO~O#U'}O#`'|O~Oo%`Op%aOq%bOr%cO#`(OO~Ou$zOv${Ow$|Ox$}Oy%OOz%PO{%QO|%RO}%SO!P%UO!Q%VO$qzOZ$pi_$pio$pip$piq$pir$pis$pi!R$pi!S$pi!T$pi!U$pi!V$pi!W$pi!X$pi#`$pi`$pi%k$pi%l$pi~Ot$yO~P>ZOt$pi~P>ZOw$|Ox$}Oy%OOz%PO{%QO|%RO!P%UO!Q%VO$qzOZ$pi_$pio$pip$piq$pir$pis$pit$piu$pi}$pi!R$pi!S$pi!T$pi!U$pi!V$pi!W$pi!X$pi#`$pi`$pi%k$pi%l$pi~Ov${O~P@iOv$pi~P@iOx$}Oy%OOz%PO{%QO!P%UO!Q%VO$qzOZ$pi_$pio$pip$piq$pir$pis$pit$piu$piv$piw$pi}$pi!R$pi!S$pi!T$pi!U$pi!V$pi!W$pi!X$pi#`$pi`$pi%k$pi%l$pi~O|%RO~PBwOz%PO{%QOZ$pi_$pio$pip$piq$pir$pis$pit$piu$piv$piw$pix$pi|$pi}$pi!P$pi!Q$pi!R$pi!S$pi!T$pi!U$pi!V$pi!W$pi!X$pi#`$pi$q$pi`$pi%k$pi%l$pi~Oy%OO~PEOOy$pi~PEOO|$pi~PBwOu$zOv${Ow$|Ox$}Oy%OOz%PO{%QO|%RO!P%UO!Q%VO$qzOZ$pi_$pio$pip$piq$pir$pi!R$pi!S$pi!T$pi!U$pi!V$pi!W$pi!X$pi#`$pi`$pi%k$pi%l$pi~Os$pit$pi}$pi~PGeOx$}Oy%OOz%PO{%QO!Q%VOZ$pi_$pio$pip$piq$pir$pis$pit$piu$piv$piw$pi|$pi}$pi!R$pi!S$pi!T$pi!U$pi!V$pi!W$pi!X$pi#`$pi$q$pi`$pi%k$pi%l$pi~O!P%UO~PIlO!P$pi~PIlOx$}Oy%OOz%PO{%QOZ$pi_$pio$pip$piq$pir$pi!R$pi!S$pi!T$pi!U$pi!V$pi!W$pi!X$pi#`$pi`$pi%k$pi%l$pi~Os$pit$piu$piv$piw$pi|$pi}$pi!P$pi!Q$pi$q$pi~PKzOs$xOt$yOu$zOv${Ow$|Ox$}Oy%OOz%PO{%QO|%RO}%SO!P%UO!Q%VO!T%YO!U%ZO!V%[O!W%]O$qzOZ$pi_$pio$pip$piq$pir$pi!R$pi!X$pi#`$pi`$pi%k$pi%l$pi~O!S%XO~PNRO!S$pi~PNROs$xOt$yOu$zOv${Ow$|Ox$}Oy%OOz%PO{%QO|%RO}%SO!P%UO!Q%VO!W%]O$qzOZ$pi_$pio$pip$piq$pir$pi!R$pi!S$pi!T$pi!V$pi!X$pi#`$pi`$pi%k$pi%l$pi~O!U%ZO~P!!aO!U$pi~P!!aOs$xOt$yOu$zOv${Ow$|Ox$}Oy%OOz%PO{%QO|%RO}%SO!P%UO!Q%VO$qzOZ$pi_$pio$pip$piq$pir$pi!R$pi!S$pi!V$pi!X$pi#`$pi`$pi%k$pi%l$pi~O!T%YO!U%ZO!W%]O~P!$oOs$xOt$yO}%SO~PGeO_(PO#`%dO~O!Y$rX#U$rX~P:OO!Y(PO~Oo%`Or%cO_$oiq$oi#`$oi~Op$oi~P!'lOp%aO~P!'lOo%`Op%aOq%bOr%cO_$oi#`$oi~Oo%`Op%aOq%bOr%cO_ni#`ni~O#U$rP~P:OOz(UO#U#YP%m#YP~Or%nO#`%jO`#_io#_ip#_iq#_i%k#_i%l#_i_#_i~Oo%kOr%nO#`%jO`#aip#aiq#ai%k#ai%l#ai_#ai~Oo%kOp%lOr%nO#`%jO`#biq#bi%k#bi%l#bi_#bi~Oo%kOp%lOq%mOr%nO#`%jO~O`#ci%k#ci%l#ci_#ci~P!+dO#k(ZO~OZ([O}(]O~O#`(^O~O#`(_O~O{(nO~O_(oO#`%dO~O`(rO~P5ZO#U(sO~O#](uO~Oz(UO#U#YX%m#YX~O#U(xO%m(wO~O#`(zO~O_)PO$x!QO$y!RO%x({O~O#k)RO~O#k)SO~Oo%`Op%aOq%bOr%cO#`)TO~Oo%`Op%aOq%bOr%cO#`)UO~Oo%`Op%aOq%bOr%cO#`)VO~O_)WO~P5ZO_)XO~P5ZO_)YO~P5ZOo%`Op%aOq%bOr%cO#`)ZO~Oo%`Op%aOq%bOr%cO#`)[O~O_)]Oo%`Op%aOq%bOr%cO~Oo%`Op%aOq%bOr%cO#`)^O~Oo%`Op%aOq%bOr%cO#`)_O~Oo%`Op%aOq%bOr%cO#`)`O~Oo%`Op%aOq%bOr%cO#`)aO~OZ)bO~O#h)cO~O_)dOo%`Op%aOq%bOr%cO#`)bO~O_)iO#`)hO~OZ)jO})kO~O_)lO~O_)mO~O`)yO~P5ZO#U)zO~O_){O~O_*OO$x!QO$y!RO%x({O~Oo%`Op%aOq%bOr%cO#`*QO~Oo%`Op%aOq%bOr%cO#`*RO~Oo%`Op%aOq%bOr%cO#`*SO~O_*TOo%`Op%aOq%bOr%cO~O_*UOo%`Op%aOq%bOr%cO~O_*VO~P5ZO_*WO~P5ZO_*XO~P5ZO_*YO~P5ZO_*ZO~P5ZO`*[O~P5ZO_*]O#`)hO~OZ*^O~O_*cO$x!QO$y!RO%x({O~Oo%`Op%aOq%bOr%cO#`*dO~Oo%`Op%aOq%bOr%cO#`*eO~Oo%`Op%aOq%bOr%cO#`*fO~O_*gO#`)hO~O_*kOo%`Op%aOq%bOr%cO~O_*lOo%`Op%aOq%bOr%cO~O_*mOo%`Op%aOq%bOr%cO~O$c$YO~Oh*oO~O$u$tPv$c{![~",
  goto: "!<u&vPPPP&w'R'R'R'R']'`P'c([PPP'](t(w)T+n-k-kP/j/r']/z0Q0UPPPPPPPPPPPPPPP0_PPPPPPPPPP2ZPP3z3z5e5e3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z3z7Z7q8SPP7Z8V8h8k8n8rP8v7ZP7Z7Z7Z7ZP8y:dP:g7TP<Q=k?U?U@oBYB]CvCy3zEdF}HhJRKlMVNp!!Z!#t!%_!&x!(c!)|!+g!-Q!.k!0U!1o!1v!2S!2Y!2bPPP!2h!2nPPPPP!2yPPPPPP!2|!4yP!7[!7ePPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP!9OPPP!:^P!:a!:d3zP!:j!:m!:v!;PP3zP3zPPPPP!;XP!;[P!;[P!;[P!;[P!;[P!;[P!;[P!;[P!;[P!;[P3zP3zP3zP3zP3zP3zP3zaUOVX$u%_&}'V(yaTOVX$u%_&}'V(yRfWR]WQtiQ%y$`Q%z$aQ%{$bQ%|$cQ%}$dQ&O$eQ&P$fQ&Q$gQ&R$hQ&S$iQ&T$jR&b$tjsi$`$a$b$c$d$e$f$g$h$i$j$tQwoQ$XxR)g(zRcWQocQxoQ'b%wR'c%xSdW&|Wnco%w%x$O#spq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*fQ$[}Q&U$kQ&V$lQ&W$mQ&X$nQ&]$rQ&o%QQ'a%vQ(m'uQ(t(UQ)Q(]R*P)k$ubWcopq}#t$k$l$m$n$o$p$r$w$x$y$z${$|$}%O%Q%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n%v%w%x&_&|'U'f'g'h'i'j'k'l'm'n'o'p'q'r'u(O(U(](u)T)U)V)Z)[)^)_)`)a)b)c)k*Q*R*S*d*e*fpaWco$k$l$m$n$r%v%w%x&|'u(U(])k$T*ppq}#t$o$p$w$x$y$z${$|$}%O%Q%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*fSk`*nTum*oSl`*nTvm*oQfWR(Q&|TeW&|Q$OpQ&{%^R'w&_$O#spq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*fo%T#{$R&h&i&j&k&l&p&q&u&v&w&x&y&z$O#spq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*fQ&e$vR(p'|$P#spq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$O#spq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*fU%t$]$^$_X(|([)h)j*^y$Qq#t$o$p%j%k%l%m%n'U'i'j'k(u)^)_)`)a)b)co%g$P$q&Y&Z(S(c(d(e)e)s)t)u)v)w)xR'W%go%i$P$q&Y&Z(S(c(d(e)e)s)t)u)v)w)xR'Y%iR(Y'XT(W'X(XT(V'X(XR(y(Y$P#vpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*fR$[#v$P!tpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P!vpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P!xpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#wpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#xpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*fR$[#x$P#ypq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*fR$[#y$P#zpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#Ppq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#Rpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#Tpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#Vpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#Xpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#Zpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#]pq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#_pq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#apq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#cpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#fpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#hpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#jpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#lpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#npq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#ppq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f$P#rpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*fSXO$uRhX^VOX$u%_&}'V(yRZVQ$TrR%p$TU&}%_'V(yR(R&}Q(X'XR(v(XQYOR&c$uUWOX$uX&|%_&}'V(yRgWU#}p%^&_Q&g$wQ'P%`Q'Q%aQ'R%bQ'S%cQ'T%dQ(`'fQ(a'gQ(b'hQ(f'lQ(g'mQ(h'nQ(i'oQ(j'pQ(k'qQ(l'rQ(q(OQ)n)TQ)o)UQ)p)VQ)q)ZQ)r)[Q*_*QQ*`*RQ*a*SQ*h*dQ*i*eR*j*f!`#{p$w%^%`%a%b%c%d&_'f'g'h'l'm'n'o'p'q'r(O)T)U)V)Z)[*Q*R*S*d*e*fx$Rq#t$o$p%j%k%l%m%n'U'i'j'k(u)^)_)`)a)b)cQ&h$xQ&i$yQ&j$zQ&k${Q&l$|Q&m$}Q&n%OQ&p%RQ&q%SQ&r%TQ&s%UQ&t%VQ&u%WQ&v%XQ&w%YQ&x%ZQ&y%[R&z%]Q'O%_Q(T'VR)f(y$P#|pq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*fQ$PqQ$q#tQ&Y$oQ&Z$pQ'Z%jQ'[%kQ']%lQ'^%mQ'_%nQ(S'UQ(c'iQ(d'jQ(e'kQ)e(uQ)s)^Q)t)_Q)u)`Q)v)aQ)w)bR)x)cR&^$rR&a$sQ&`$sR'x&aR%u$]Q%v$]Q%w$^R%x$_Q)O([Q)})jR*b*^U(}([)j*^R)|)hR&f$v$P#dpq#t$o$p$w$x$y$z${$|$}%O%R%S%T%U%V%W%X%Y%Z%[%]%^%`%a%b%c%d%j%k%l%m%n&_'U'f'g'h'i'j'k'l'm'n'o'p'q'r(O(u)T)U)V)Z)[)^)_)`)a)b)c*Q*R*S*d*e*f",
  nodeNames:
    '⚠ LineComment BlockComment Program Variant FLOATMODE DOUBLEMODE QUADMODE FIXEDPOINTMODE Import IMPORT LPAR UqString String StringMeta RPAR ENDDEF GlobalMeta DECLARE Name Identifier ScopedIdentifier NamespaceIdentifier ScopedNamespaceIdentifier NS NamespaceIdentifier Identifier FuncMeta Definition DefName ArgList SEQ SPLIT MIX REC ADD SUB MUL DIV MOD POWOP FDELAY DELAY1 DOT AND OR XOR LSH RSH LT LE GT GE EQ NE LCROC RCROC Number WIRE CUT MEM PREFIX INTCAST FLOATCAST ATTACH ENABLE CONTROL ACOS ASIN ATAN ATAN2 COS SIN TAN EXP LOG LOG10 POWFUN SQRT ABS MIN MAX FMOD REMAINDER FLOOR CEIL RINT RDTBL RWTBL SELECT2 SELECT3 ASSERTBOUNDS LOWEST HIGHEST WithExp WITH WithBlock LBRAQ RBRAQ LetrecExp LETREC LetrecBlock RecList Recinition RecName DEF WHERE ParExp PAR SeqExp SplitExp MergeExp RecExp LAMBDA CASE CaseBlock ARROW FFUNCTION NOTYPECAST FString FCONSTANT FVARIABLE COMPONENT LIBRARY ENVIRONMENT EnvBlock WAVEFORM WaveformBlock ROUTE UiPrimitive BUTTON CHECKBOX VSLIDER HSLIDER NENTRY VGROUP HGROUP TGROUP VBARGRAPH HBARGRAPH SOUNDFILE IPAR ISEQ ISUM IPROD INPUTS OUTPUTS',
  maxTerm: 268,
  nodeProps: [
    ['closedBy', 11, 'RPAR', 55, 'RCROC', 97, 'RBRAQ'],
    ['openedBy', 15, 'LPAR', 56, 'LCROC', 98, 'LBRAQ'],
  ],
  skippedNodes: [0, 1, 2],
  repeatNodeCount: 5,
  tokenData:
    "2V~RsXY#`YZ#`]^#`pq#`qr#qrs$Ouv&Wvw&]wx&bxy&gyz&lz{&q{|&v|}'T}!O'Y!O!P'_!P!Q(i!Q![,|![!]-_!]!^-o!^!_-t!_!`/_!`!a/t!b!c0Z!c!}0`!}#O0q#O#P0v#P#Q0{#Q#R1Q#R#S1V#T#o0`#o#p1q#p#q1v#q#r1{#r#s2Q~#eS$`~XY#`YZ#`]^#`pq#`~#vP!]~!_!`#y~$OO!W~Y$TV$jQOr$jrs%Ss#O$j#O#P%X#P;'S$j;'S;=`&Q<%lO$jW$mVOr$jrs%Ss#O$j#O#P%X#P;'S$j;'S;=`&Q<%lO$jW%XO#kWW%[RO;'S$j;'S;=`%e;=`O$jW%hWOr$jrs%Ss#O$j#O#P%X#P;'S$j;'S;=`&Q;=`<%l$j<%lO$jW&TP;=`<%l$j~&]Ow~~&bO|~~&gOz~~&lOZ~~&qO_~~&vOu~~&{Ps~!`!a'O~'TOq~~'YO#`~~'_Ot~~'dP{~!Q!['g~'lR$u~!Q!['g#X#Y'u#Y#Z(d~'xR{|(R}!O(R!Q![(X~(UP!Q![(X~(^Q$u~!Q![(X#Y#Z(d~(iO$u~~(nQv~z{(t!P!Q){~(wTOz(tz{)W{;'S(t;'S;=`)u<%lO(t~)ZVOz(tz{)W{!P(t!P!Q)p!Q;'S(t;'S;=`)u<%lO(t~)uOQ~~)xP;=`<%l(t~*QUP~OY){Z#O){#O#P*d#P;'S){;'S;=`,v<%lO){~*iUP~OY){Z#O){#O#P*{#P;'S){;'S;=`,v<%lO){~+QYP~OY){Z#O){#O#P*{#P#b){#b#c){#c#f){#f#g+p#g;'S){;'S;=`,v<%lO){~+uUP~OY){Z#O){#O#P,X#P;'S){;'S;=`,v<%lO){~,^WP~OY){Z#O){#O#P*{#P#b){#b#c){#c;'S){;'S;=`,v<%lO){~,yP;=`<%l){~-RS$t~!O!P'g!Q![,|#X#Y'u#Y#Z(d~-dQo~![!]-j!`!a'O~-oOh~~-tO`~~-yV!RS!O!P.`![!].o!^!_.t!_!`.y!`!a%S!c!}/O#T#o/OW.cQ!c!}.i#T#o.iW.lP!`!a%S~.tOp~~.yO!P~~/OO!S~W/RS!O!P.`!`!a%S!c!}/O#T#o/OU/dQ#]Q!_!`/j!`!a/oS/oO!VSS/tO#hS~/yQ!T~!_!`0P!`!a0U~0UO!U~~0ZO!Q~~0`Oy~~0eS$c~!Q![0`!c!}0`#R#S0`#T#o0`~0vO!X~~0{O#e~~1QO!Y~~1VOx~~1[R![~!c!}0`#R#S1e#T#o0`~1hR!c!}0`#R#S1e#T#o0`~1vO#T~~1{O}~~2QO#U~~2VOr~",
  tokenizers: [
    1,
    2,
    3,
    new LocalTokenGroup(
      "!m~RRrs[!}#Oa#O#P!R~aO$m~~dUOras#Pa#P#Qv#Q;'Sa;'S;=`{<%lOa~{O^~~!OP;=`<%la~!URO;'S!_;'S;=`!d;=`O!_~!dO$l~~!iP$l~;=`<%l!_~",
      74,
      165
    ),
  ],
  topRules: { Program: [0, 3] },
  specialized: [{ term: 157, get: value => spec__ID[value] || -1 }],
  tokenPrec: 3282,
});

const FaustLanguage = LRLanguage.define({
  parser: parser.configure({
    props: [
      indentNodeProp.add({
        // IfStatement: continuedIndent({except: /^\s*({|else\b)/}),
        // TryStatement: continuedIndent({except: /^\s*({|catch)\b/}),
        // LabeledStatement: flatIndent,
        // CaseStatement: context => context.baseIndent + context.unit,
        // BlockComment: () => null,
        // CompoundStatement: delimitedIndent({closing: "}"}),
        // Statement: continuedIndent({except: /^{/})
        // Application: delimitedIndent({closing: "}", align: true})
      }),
      foldNodeProp.add({
        'WithBlock LetrecBlock CaseBlock EnvBlock WaveformBlock': foldInside,
        BlockComment: tree => ({ from: tree.from + 2, to: tree.to - 2 }),
      }),
      // standardized tag names for highlighting, as defined here:
      // https://github.com/lezer-parser/highlight/blob/main/src/highlight.ts#L395
      styleTags({
        Number: tags.number,
        String: tags.string,
        UqString: tags.string,
        FString: tags.string,
        StringMeta: tags.annotation,
        LineComment: tags.lineComment,
        BlockComment: tags.blockComment,
        Identifier: tags.variableName,
        NamespaceIdentifier: tags.namespace,
        DECLARE: tags.keyword,
        IMPORT: tags.moduleKeyword,
        LIBRARY: tags.moduleKeyword,
        COMPONENT: tags.moduleKeyword,
        ENVIRONMENT: tags.moduleKeyword,
        WITH: tags.keyword,
        LETREC: tags.keyword,
        WHERE: tags.keyword,
        CASE: tags.keyword,
        INTCAST: tags.keyword,
        FLOATCAST: tags.keyword,
        NOTYPECAST: tags.keyword,
        FFUNCTION: tags.definitionKeyword,
        FCONSTANT: tags.definitionKeyword,
        FVARIABLE: tags.definitionKeyword,
        RDTBL: tags.definitionKeyword,
        RWTBL: tags.definitionKeyword,
        WAVEFORM: tags.definitionKeyword,
        SOUNDFILE: tags.definitionKeyword,
        PAR: tags.separator,
        SEQ: tags.controlOperator,
        REC: tags.controlOperator,
        MIX: tags.controlOperator,
        SPLIT: tags.controlOperator,
        CUT: tags.controlOperator,
        WIRE: tags.controlOperator,
        ROUTE: tags.controlOperator,
        ISEQ: tags.controlOperator,
        IPAR: tags.controlOperator,
        ISUM: tags.controlOperator,
        IPROD: tags.controlOperator,
        INPUTS: tags.controlOperator,
        OUTPUTS: tags.controlOperator,
        SELECT2: tags.controlOperator,
        SELECT3: tags.controlOperator,
        AND: tags.logicOperator,
        OR: tags.logicOperator,
        XOR: tags.logicOperator,
        LSH: tags.bitwiseOperator,
        RSH: tags.bitwiseOperator,
        LT: tags.compareOperator,
        LE: tags.compareOperator,
        GT: tags.compareOperator,
        GE: tags.compareOperator,
        EQ: tags.compareOperator,
        NE: tags.compareOperator,
        ARROW: tags.compareOperator,
        FDELAY: tags.derefOperator,
        DELAY1: tags.derefOperator,
        MEM: tags.derefOperator,
        ADD: tags.arithmeticOperator,
        SUB: tags.arithmeticOperator,
        MUL: tags.arithmeticOperator,
        DIV: tags.arithmeticOperator,
        MOD: tags.arithmeticOperator,
        POWOP: tags.arithmeticOperator,
        ACOS: tags.operatorKeyword,
        ASIN: tags.operatorKeyword,
        ATAN: tags.operatorKeyword,
        ATAN2: tags.operatorKeyword,
        COS: tags.operatorKeyword,
        SIN: tags.operatorKeyword,
        TAN: tags.operatorKeyword,
        EXP: tags.operatorKeyword,
        LOG: tags.operatorKeyword,
        LOG10: tags.operatorKeyword,
        POWFUN: tags.operatorKeyword,
        SQRT: tags.operatorKeyword,
        ABS: tags.operatorKeyword,
        MIN: tags.operatorKeyword,
        MAX: tags.operatorKeyword,
        FMOD: tags.operatorKeyword,
        REMAINDER: tags.operatorKeyword,
        FLOOR: tags.operatorKeyword,
        CEIL: tags.operatorKeyword,
        RINT: tags.operatorKeyword,
        LAMBDA: tags.typeOperator,
        DEF: tags.definitionOperator,
        ENDDEF: tags.separator,
        DOT: tags.separator,
        NS: tags.separator,
        BUTTON: tags.typeName,
        CHECKBOX: tags.typeName,
        VSLIDER: tags.typeName,
        HSLIDER: tags.typeName,
        NENTRY: tags.typeName,
        VGROUP: tags.typeName,
        HGROUP: tags.typeName,
        TGROUP: tags.typeName,
        VBARGRAPH: tags.typeName,
        HBARGRAPH: tags.typeName,
        ATTACH: tags.typeName,
        FLOATMODE: tags.literal,
        DOUBLEMODE: tags.literal,
        QUADMODE: tags.literal,
        FIXEDPOINTMODE: tags.literal,
        LPAR: tags.paren,
        RPAR: tags.paren,
        LBRAQ: tags.brace,
        RBRAQ: tags.brace,
        LCROC: tags.squareBracket,
        RCROC: tags.squareBracket,
        // DefName: t.variableName,
        // UiPrimitive: t.typeName,
        // undocumented
        // PREFIX: t.keyword,
        // ENABLE: t.keyword,
        // CONTROL: t.keyword,
        // ASSERTBOUNDS: t.keyword,
        // LOWEST: t.keyword,
        // HIGHEST: t.keyword,
      }),
    ],
  }),
  languageData: {
    commentTokens: { line: '//' },
  },
});
function Faust() {
  return new LanguageSupport(FaustLanguage);
}

export { Faust, FaustLanguage };
